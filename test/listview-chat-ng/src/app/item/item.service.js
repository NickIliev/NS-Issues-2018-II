"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ItemService = /** @class */ (function () {
    function ItemService() {
        this.items = new Array({ id: 1, from: "John", message: "Hey There!" }, { id: 3, from: "Ann", message: "Yo-ho-ho" }, { id: 4, from: "Ann", message: "Hello Mr.Smith" }, { id: 5, from: "Ann", message: "Hello Mr.Smith" }, { id: 6, from: "Ann", message: "Hello Mr.Smith" }, { id: 7, from: "John", message: "Hello Mr.Smith" }, { id: 8, from: "John", message: "Hello Mr.Smith" }, { id: 9, from: "John", message: "Welcome" }, { id: 10, from: "Ann", message: "Welcome" }, { id: 11, from: "Ann", message: "Welcome" }, { id: 12, from: "John", message: "Hello Mr.Smith" }, { id: 13, from: "Ann", message: "Hey There!" }, { id: 14, from: "Ann", message: "Yo-ho-ho" }, { id: 17, from: "Ann", message: "Welcome" }, { id: 18, from: "John", message: "Yo-ho-ho" }, { id: 19, from: "John", message: "Yo-ho-ho" }, { id: 20, from: "Ann", message: "Hello Mr.Smith" }, { id: 21, from: "John", message: "Hello Mr.Smith" }, { id: 22, from: "Ann", message: "Hello Mr.Smith" }, { id: 23, from: "John", message: "Yo-ho-ho" }, { id: 24, from: "Ann", message: "Yo-ho-ho" }, { id: 25, from: "John", message: "Hey There!" });
    }
    ItemService.prototype.getItems = function () {
        return this.items;
    };
    ItemService.prototype.getItem = function (id) {
        return this.items.filter(function (item) { return item.id === id; })[0];
    };
    ItemService = __decorate([
        core_1.Injectable({
            providedIn: "root"
        })
    ], ItemService);
    return ItemService;
}());
exports.ItemService = ItemService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaXRlbS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBTzNDO0lBSEE7UUFJWSxVQUFLLEdBQUcsSUFBSSxLQUFLLENBQ3JCLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsRUFDOUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxFQUMzQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsRUFDakQsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLEVBQ2pELEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxFQUNqRCxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsRUFDbEQsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLEVBQ2xELEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsRUFDM0MsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxFQUMzQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLEVBQzNDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxFQUNuRCxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLEVBQzlDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsRUFDNUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxFQUMzQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLEVBQzdDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsRUFDN0MsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLEVBQ2xELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxFQUNuRCxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsRUFDbEQsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxFQUM3QyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLEVBQzVDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsQ0FDbEQsQ0FBQztJQVNOLENBQUM7SUFQRyw4QkFBUSxHQUFSO1FBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRCw2QkFBTyxHQUFQLFVBQVEsRUFBVTtRQUNkLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBZCxDQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBaENRLFdBQVc7UUFIdkIsaUJBQVUsQ0FBQztZQUNSLFVBQVUsRUFBRSxNQUFNO1NBQ3JCLENBQUM7T0FDVyxXQUFXLENBaUN2QjtJQUFELGtCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7QUFqQ1ksa0NBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuaW1wb3J0IHsgSXRlbSB9IGZyb20gXCIuL2l0ZW1cIjtcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46IFwicm9vdFwiXG59KVxuZXhwb3J0IGNsYXNzIEl0ZW1TZXJ2aWNlIHtcbiAgICBwcml2YXRlIGl0ZW1zID0gbmV3IEFycmF5PEl0ZW0+KFxuICAgICAgICB7IGlkOiAxLCBmcm9tOiBcIkpvaG5cIiwgbWVzc2FnZTogXCJIZXkgVGhlcmUhXCIgfSxcbiAgICAgICAgeyBpZDogMywgZnJvbTogXCJBbm5cIiwgbWVzc2FnZTogXCJZby1oby1ob1wiIH0sXG4gICAgICAgIHsgaWQ6IDQsIGZyb206IFwiQW5uXCIsIG1lc3NhZ2U6IFwiSGVsbG8gTXIuU21pdGhcIiB9LFxuICAgICAgICB7IGlkOiA1LCBmcm9tOiBcIkFublwiLCBtZXNzYWdlOiBcIkhlbGxvIE1yLlNtaXRoXCIgfSxcbiAgICAgICAgeyBpZDogNiwgZnJvbTogXCJBbm5cIiwgbWVzc2FnZTogXCJIZWxsbyBNci5TbWl0aFwiIH0sXG4gICAgICAgIHsgaWQ6IDcsIGZyb206IFwiSm9oblwiLCBtZXNzYWdlOiBcIkhlbGxvIE1yLlNtaXRoXCIgfSxcbiAgICAgICAgeyBpZDogOCwgZnJvbTogXCJKb2huXCIsIG1lc3NhZ2U6IFwiSGVsbG8gTXIuU21pdGhcIiB9LFxuICAgICAgICB7IGlkOiA5LCBmcm9tOiBcIkpvaG5cIiwgbWVzc2FnZTogXCJXZWxjb21lXCIgfSxcbiAgICAgICAgeyBpZDogMTAsIGZyb206IFwiQW5uXCIsIG1lc3NhZ2U6IFwiV2VsY29tZVwiIH0sXG4gICAgICAgIHsgaWQ6IDExLCBmcm9tOiBcIkFublwiLCBtZXNzYWdlOiBcIldlbGNvbWVcIiB9LFxuICAgICAgICB7IGlkOiAxMiwgZnJvbTogXCJKb2huXCIsIG1lc3NhZ2U6IFwiSGVsbG8gTXIuU21pdGhcIiB9LFxuICAgICAgICB7IGlkOiAxMywgZnJvbTogXCJBbm5cIiwgbWVzc2FnZTogXCJIZXkgVGhlcmUhXCIgfSxcbiAgICAgICAgeyBpZDogMTQsIGZyb206IFwiQW5uXCIsIG1lc3NhZ2U6IFwiWW8taG8taG9cIiB9LFxuICAgICAgICB7IGlkOiAxNywgZnJvbTogXCJBbm5cIiwgbWVzc2FnZTogXCJXZWxjb21lXCIgfSxcbiAgICAgICAgeyBpZDogMTgsIGZyb206IFwiSm9oblwiLCBtZXNzYWdlOiBcIllvLWhvLWhvXCIgfSxcbiAgICAgICAgeyBpZDogMTksIGZyb206IFwiSm9oblwiLCBtZXNzYWdlOiBcIllvLWhvLWhvXCIgfSxcbiAgICAgICAgeyBpZDogMjAsIGZyb206IFwiQW5uXCIsIG1lc3NhZ2U6IFwiSGVsbG8gTXIuU21pdGhcIiB9LFxuICAgICAgICB7IGlkOiAyMSwgZnJvbTogXCJKb2huXCIsIG1lc3NhZ2U6IFwiSGVsbG8gTXIuU21pdGhcIiB9LFxuICAgICAgICB7IGlkOiAyMiwgZnJvbTogXCJBbm5cIiwgbWVzc2FnZTogXCJIZWxsbyBNci5TbWl0aFwiIH0sXG4gICAgICAgIHsgaWQ6IDIzLCBmcm9tOiBcIkpvaG5cIiwgbWVzc2FnZTogXCJZby1oby1ob1wiIH0sXG4gICAgICAgIHsgaWQ6IDI0LCBmcm9tOiBcIkFublwiLCBtZXNzYWdlOiBcIllvLWhvLWhvXCIgfSxcbiAgICAgICAgeyBpZDogMjUsIGZyb206IFwiSm9oblwiLCBtZXNzYWdlOiBcIkhleSBUaGVyZSFcIiB9LFxuICAgICk7XG5cbiAgICBnZXRJdGVtcygpOiBJdGVtW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVtcztcbiAgICB9XG5cbiAgICBnZXRJdGVtKGlkOiBudW1iZXIpOiBJdGVtIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXRlbXMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5pZCA9PT0gaWQpWzBdO1xuICAgIH1cbn1cbiJdfQ==