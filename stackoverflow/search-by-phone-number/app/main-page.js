"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var application = require("tns-core-modules/application");
var nativescript_permissions_1 = require("nativescript-permissions");
var vm = new observable_1.Observable();
vm.set("name", "");
function navigatingTo(args) {
    var page = args.object;
    nativescript_permissions_1.requestPermissions(["android.permission.READ_CONTACTS", "android.permission.WRITE_CONTACTS"]);
    page.bindingContext = vm;
}
exports.navigatingTo = navigatingTo;
function getNameByNumber() {
    console.log("getNameByNumber");
    var phoneNumber = "0885051781";
    var lookupUri = android.net.Uri.withAppendedPath(android.provider.ContactsContract.PhoneLookup.CONTENT_FILTER_URI, android.net.Uri.encode(phoneNumber));
    var contentResolver = application.android.context.getContentResolver();
    var contactLookup = contentResolver.query(lookupUri, [android.provider.BaseColumns._ID,
        android.provider.ContactsContract.ContactsColumns.DISPLAY_NAME], null, null, null);
    if (contactLookup != null && contactLookup.getCount() > 0) {
        console.log("here");
        contactLookup.moveToNext();
        var name_1 = contactLookup.getString(contactLookup.getColumnIndex(android.provider.ContactsContract.ContactsColumns.DISPLAY_NAME));
        console.log("Found name  " + name_1 + " for number " + phoneNumber);
        vm.set("name", name_1);
    }
    else {
        console.log("therh");
    }
}
exports.getNameByNumber = getNameByNumber;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsK0RBQXlFO0FBRXpFLDBEQUE0RDtBQUM1RCxxRUFBOEQ7QUFHOUQsSUFBSSxFQUFFLEdBQUcsSUFBSSx1QkFBVSxFQUFFLENBQUM7QUFDMUIsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFbkIsc0JBQTZCLElBQWU7SUFFeEMsSUFBSSxJQUFJLEdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUU3Qiw2Q0FBa0IsQ0FBQyxDQUFDLGtDQUFrQyxFQUFFLG1DQUFtQyxDQUFDLENBQUMsQ0FBQTtJQUU3RixJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUM3QixDQUFDO0FBUEQsb0NBT0M7QUFFRDtJQUNJLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUUvQixJQUFJLFdBQVcsR0FBRyxZQUFZLENBQUM7SUFDL0IsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsa0JBQWtCLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDeEosSUFBSSxlQUFlLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUN2RSxJQUFJLGFBQWEsR0FBRyxlQUFlLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLEdBQUc7UUFDbEYsT0FBTyxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUV4RixFQUFFLENBQUMsQ0FBQyxhQUFhLElBQUksSUFBSSxJQUFJLGFBQWEsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hELE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEIsYUFBYSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzNCLElBQUksTUFBSSxHQUFHLGFBQWEsQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBQ2pJLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWUsTUFBSSxvQkFBZSxXQUFhLENBQUMsQ0FBQztRQUM3RCxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFJLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBQUMsSUFBSSxDQUFDLENBQUM7UUFDSixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQ3hCLENBQUM7QUFFTCxDQUFDO0FBbkJELDBDQW1CQyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgRXZlbnREYXRhLCBPYnNlcnZhYmxlIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvcGFnZVwiO1xuaW1wb3J0ICogYXMgYXBwbGljYXRpb24gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvYXBwbGljYXRpb25cIjtcbmltcG9ydCB7IHJlcXVlc3RQZXJtaXNzaW9ucyB9IGZyb20gXCJuYXRpdmVzY3JpcHQtcGVybWlzc2lvbnNcIjtcblxuXG5sZXQgdm0gPSBuZXcgT2JzZXJ2YWJsZSgpO1xudm0uc2V0KFwibmFtZVwiLCBcIlwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIG5hdmlnYXRpbmdUbyhhcmdzOiBFdmVudERhdGEpIHtcblxuICAgIGxldCBwYWdlID0gPFBhZ2U+YXJncy5vYmplY3Q7XG5cbiAgICByZXF1ZXN0UGVybWlzc2lvbnMoW1wiYW5kcm9pZC5wZXJtaXNzaW9uLlJFQURfQ09OVEFDVFNcIiwgXCJhbmRyb2lkLnBlcm1pc3Npb24uV1JJVEVfQ09OVEFDVFNcIl0pXG5cbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROYW1lQnlOdW1iZXIoKSB7XG4gICAgY29uc29sZS5sb2coXCJnZXROYW1lQnlOdW1iZXJcIik7XG5cbiAgICBsZXQgcGhvbmVOdW1iZXIgPSBcIjA4ODUwNTE3ODFcIjtcbiAgICBsZXQgbG9va3VwVXJpID0gYW5kcm9pZC5uZXQuVXJpLndpdGhBcHBlbmRlZFBhdGgoYW5kcm9pZC5wcm92aWRlci5Db250YWN0c0NvbnRyYWN0LlBob25lTG9va3VwLkNPTlRFTlRfRklMVEVSX1VSSSwgYW5kcm9pZC5uZXQuVXJpLmVuY29kZShwaG9uZU51bWJlcikpO1xuICAgIGxldCBjb250ZW50UmVzb2x2ZXIgPSBhcHBsaWNhdGlvbi5hbmRyb2lkLmNvbnRleHQuZ2V0Q29udGVudFJlc29sdmVyKCk7XG4gICAgbGV0IGNvbnRhY3RMb29rdXAgPSBjb250ZW50UmVzb2x2ZXIucXVlcnkobG9va3VwVXJpLCBbYW5kcm9pZC5wcm92aWRlci5CYXNlQ29sdW1ucy5fSUQsXG4gICAgICAgIGFuZHJvaWQucHJvdmlkZXIuQ29udGFjdHNDb250cmFjdC5Db250YWN0c0NvbHVtbnMuRElTUExBWV9OQU1FIF0sIG51bGwsIG51bGwsIG51bGwpO1xuXG4gICAgaWYgKGNvbnRhY3RMb29rdXAgIT0gbnVsbCAmJiBjb250YWN0TG9va3VwLmdldENvdW50KCkgPiAwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiaGVyZVwiKTtcbiAgICAgICAgY29udGFjdExvb2t1cC5tb3ZlVG9OZXh0KCk7XG4gICAgICAgIGxldCBuYW1lID0gY29udGFjdExvb2t1cC5nZXRTdHJpbmcoY29udGFjdExvb2t1cC5nZXRDb2x1bW5JbmRleChhbmRyb2lkLnByb3ZpZGVyLkNvbnRhY3RzQ29udHJhY3QuQ29udGFjdHNDb2x1bW5zLkRJU1BMQVlfTkFNRSkpO1xuICAgICAgICBjb25zb2xlLmxvZyhgRm91bmQgbmFtZSAgJHtuYW1lfSBmb3IgbnVtYmVyICR7cGhvbmVOdW1iZXJ9YCk7XG4gICAgICAgIHZtLnNldChcIm5hbWVcIiwgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJ0aGVyaFwiKVxuICAgIH1cblxufVxuIl19